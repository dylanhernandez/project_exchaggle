@model Exchaggle.ViewModels.RegisterViewModel
<img src="~/Content/Vectors/logo_md_spl_1177FF.svg" class="img-responsive" style="margin: 30px auto;" />
<div class="row">
    <div class="col-xs-12 col-md-offset-3 col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="panel panel-exchaggle">
                <div class="panel-heading">
                    Register
                </div>
                <div class="panel-body">
                    <div class="row">
                        @if (ViewBag.ErrorBlock != null)
                        {
                            <div class="col-xs-12">
                                <div class="alert exchaggle-alert-light">
                                    @ViewBag.ErrorBlock
                                </div>
                            </div>
                        }
                        <div class="col-xs-12">
                            @Html.ValidationSummary(true, "", new { @class = "exchaggle-text-attention" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Country, Model.CountryList, htmlAttributes: new { @class = "exchaggle-form-control form-control fluid-control"})
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " })
                                @Html.DropDownListFor(model => model.State, Model.StateList, htmlAttributes: new { @class = "exchaggle-form-control form-control fluid-control" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SecurityQuestionA, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.SecurityQuestionA, Model.SecurityListA, htmlAttributes: new { @class = "exchaggle-form-control form-control fluid-control" })
                                @Html.ValidationMessageFor(model => model.SecurityQuestionA, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SecurityAnswerA, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.SecurityAnswerA, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.SecurityAnswerA, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SecurityQuestionB, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.SecurityQuestionB, Model.SecurityListB, htmlAttributes: new { @class = "exchaggle-form-control form-control fluid-control" })
                                @Html.ValidationMessageFor(model => model.SecurityQuestionB, "", new { @class = "exchaggle-text-attention" })

                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SecurityAnswerB, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.SecurityAnswerB, new { htmlAttributes = new { @class = "exchaggle-form-control form-control fluid-control" } })
                                @Html.ValidationMessageFor(model => model.SecurityAnswerB, "", new { @class = "exchaggle-text-attention" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="row">
                                <div class="col-xs-12 col-sm-6">
                                    <input type="submit" value="Register" class="btn btn-block btn-exchaggle-primary fluid-control add-bottom" />&nbsp;
                                </div>
                                <div class="col-xs-12 col-sm-6">
                                    <a href="@Url.Action("Login","Account")" class="btn btn-block btn-exchaggle-secondary fluid-control add-bottom">Back</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}